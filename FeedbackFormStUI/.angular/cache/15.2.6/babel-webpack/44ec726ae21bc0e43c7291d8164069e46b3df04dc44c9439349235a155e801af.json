{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/requests.service\";\nimport * as i2 from \"@angular/router\";\nexport class FormComponent {\n  constructor(requestsServise, router) {\n    this.requestsServise = requestsServise;\n    this.router = router;\n    this.contactList = [];\n    this.topicList = [];\n    this.newContact = true;\n    this.TopicMap = new Map();\n    this.contact = {\n      id: '',\n      contactName: '',\n      contactEmail: '',\n      contactPhone: ''\n    };\n    this.message = {\n      id: '',\n      topicId: '',\n      contactId: '',\n      messageText: ''\n    };\n  }\n  ngOnInit() {\n    this.contactList$ = this.requestsServise.getAllContacts();\n    this.topicList$ = this.requestsServise.getAllTopics();\n    this.refreshTopicMap();\n  }\n  refreshTopicMap() {\n    this.requestsServise.getAllTopics().subscribe(data => {\n      this.topicList = data;\n      for (let i of data) {\n        this.TopicMap.set(this.topicList[i].id, this.topicList[i].topicName);\n      }\n    });\n  }\n  addRequest() {\n    this.requestsServise.getAllContacts().subscribe(data => {\n      this.contactList = data;\n      for (let i in this.contactList) {\n        if (this.contactList[i].contactEmail == this.contact.contactEmail && this.contactList[i].contactPhone == this.contact.contactPhone) {\n          this.newContact = false;\n        }\n      }\n    });\n    if (this.newContact == true) {\n      this.requestsServise.addContact(this.contact).subscribe({\n        next: feesbbaa => {\n          console.log(feesbbaa);\n        }\n      });\n    }\n    //   this.requestsServise.addMessage(this.feedback)\n    //   .subscribe({\n    //     next: (feedback) =>{\n    //       this.router.navigate(['request/:id']);\n    //     }\n    //   });\n  }\n}\n\nFormComponent.ɵfac = function FormComponent_Factory(t) {\n  return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.RequestsService), i0.ɵɵdirectiveInject(i2.Router));\n};\nFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormComponent,\n  selectors: [[\"app-form\"]],\n  decls: 0,\n  vars: 0,\n  template: function FormComponent_Template(rf, ctx) {},\n  styles: [\".feedback[_ngcontent-%COMP%] {\\n  color: #494949;\\n  display: flex;\\n  justify-content: center;\\n  width: 500px;\\n  background: #fff;\\n  border-radius: 12px;\\n  box-shadow: 2px 2px #808080;\\n  font-weight: 800;\\n}\\n\\n.form[_ngcontent-%COMP%] {\\n  position: relative;\\n}\\n.form__title[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  padding: 20px 0 20px 0;\\n  position: absolute;\\n  left: -38px;\\n  color: #fff;\\n  background: #a83f2a;\\n  padding: 5px 25px;\\n  width: 300px;\\n  margin: 15px 0;\\n  box-shadow: 4px 2px 7px #c2c2c2;\\n}\\n.form__title[_ngcontent-%COMP%]:before {\\n  content: \\\"\\\";\\n  position: absolute;\\n  height: 0;\\n  width: 0;\\n  border-style: solid;\\n  border-color: #691d16 transparent transparent;\\n  border-width: 14px 0px 0px 16px;\\n  top: 100%;\\n  left: 0;\\n}\\n.form__questionnaire[_ngcontent-%COMP%] {\\n  margin-top: 70px;\\n}\\n.form__button[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  padding: 5px;\\n  margin: 20px 0 20px 106px;\\n  border: 1px solid #c2c2c2;\\n  border-radius: 5px;\\n  color: #808080;\\n  width: 150px;\\n  cursor: pointer;\\n  background: linear-gradient(#c2c2c2, #fff);\\n}\\n.form__button[_ngcontent-%COMP%]:hover {\\n  border: 1px solid #808080;\\n  border-radius: 5px;\\n  color: #494949;\\n  width: 150px;\\n}\\n\\n.questionnaire[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: 96px 350px;\\n  grid-gap: 10px;\\n}\\n.questionnaire__question[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n}\\n.questionnaire__text[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  padding: 5px;\\n  border: 1px solid #c2c2c2;\\n  border-radius: 5px;\\n  color: #808080;\\n}\\n.questionnaire__text[_ngcontent-%COMP%]:focus-visible {\\n  border: 1px solid #808080;\\n  outline: 0;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9mb3JtL2Zvcm0uY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi8uLi8lRDAlOUMlRDAlQkUlRDAlQjglMjAlRDElODAlRDAlQjAlRDAlQjElRDAlQkUlRDElODIlRDElOEIlMjAoJUQxJTgxJUQwJUIwJUQwJUI5JUQxJTgyJUQxJThCKS9GZWVkYmFja19mb3JtX1NUL0ZlZWRiYWNrRm9ybVN0VUkvc3JjL2FwcC9jb21wb25lbnRzL2Zvcm0vZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFRQTtFQUNFLGNBUFU7RUFRVixhQUFBO0VBQ0EsdUJBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBYk07RUFjTixtQkFBQTtFQUNBLDJCQUFBO0VBQ0EsZ0JBQUE7QUNQRjs7QURVQTtFQUNDLGtCQUFBO0FDUEQ7QURTRTtFQUNFLGVBQUE7RUFDQSxzQkFBQTtFQUNBLGtCQUFBO0VBQ0QsV0FBQTtFQUNBLFdBQUE7RUFDQSxtQkF4Qkc7RUF5QkgsaUJBQUE7RUFDQyxZQUFBO0VBQ0EsY0FBQTtFQUNBLCtCQUFBO0FDUEo7QURXRTtFQUNFLFdBQUE7RUFDQSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxRQUFBO0VBQ0EsbUJBQUE7RUFDQSw2Q0FBQTtFQUNBLCtCQUFBO0VBQ0EsU0FBQTtFQUNBLE9BQUE7QUNUSjtBRFlFO0VBQ0UsZ0JBQUE7QUNWSjtBRGFFO0VBQ0UsZUFBQTtFQUNBLFlBQUE7RUFDQSx5QkFBQTtFQUNBLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQXpERztFQTBESCxZQUFBO0VBQ0EsZUFBQTtFQUNBLDBDQUFBO0FDWEo7QURjRTtFQUNFLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQWpFUTtFQWtFUixZQUFBO0FDWko7O0FEZ0JBO0VBQ0UsYUFBQTtFQUNBLGlDQUFBO0VBQ0EsY0FBQTtBQ2JGO0FEZUU7RUFDRSxlQUFBO0FDYko7QURnQkU7RUFDRSxlQUFBO0VBQ0EsWUFBQTtFQUNBLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQXJGRztBQ3VFUDtBRGdCRTtFQUNFLHlCQUFBO0VBQ0EsVUFBQTtBQ2RKIiwic291cmNlc0NvbnRlbnQiOlsiJHdoaXRlOiAjZmZmO1xyXG4kZ3JheTogIzgwODA4MDtcclxuJGRhcmstZ3JheTogIzQ5NDk0OTtcclxuJGxpZ2h0LWdyYXk6ICNjMmMyYzI7XHJcbiRyZWQ6ICNhODNmMmE7XHJcbiRkYXJrLXJlZDogIzY5MWQxNjtcclxuXHJcblxyXG4uZmVlZGJhY2t7XHJcbiAgY29sb3I6ICRkYXJrLWdyYXk7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB3aWR0aDogNTAwcHg7XHJcbiAgYmFja2dyb3VuZDogJHdoaXRlO1xyXG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XHJcbiAgYm94LXNoYWRvdzogMnB4IDJweCAkZ3JheTtcclxuICBmb250LXdlaWdodDogODAwO1xyXG59XHJcblxyXG4uZm9ybXtcclxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgXHJcbiAgJl9fdGl0bGV7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICBwYWRkaW5nOiAyMHB4IDAgMjBweCAwO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG5cdCAgbGVmdDogLTM4cHg7XHJcblx0ICBjb2xvcjogI2ZmZjtcclxuXHQgIGJhY2tncm91bmQ6ICRyZWQ7XHJcblx0ICBwYWRkaW5nOiA1cHggMjVweDtcclxuICAgIHdpZHRoOiAzMDBweDtcclxuICAgIG1hcmdpbjogMTVweCAwO1xyXG4gICAgYm94LXNoYWRvdzogNHB4IDJweCA3cHggJGxpZ2h0LWdyYXk7XHJcbiAgfVxyXG5cclxuXHJcbiAgJl9fdGl0bGU6YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBoZWlnaHQ6IDA7XHJcbiAgICB3aWR0aDogMDtcclxuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XHJcbiAgICBib3JkZXItY29sb3I6ICRkYXJrLXJlZCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci13aWR0aDoxNHB4IDBweCAwcHggMTZweDtcclxuICAgIHRvcDogMTAwJTtcclxuICAgIGxlZnQ6IDA7XHJcbiAgfVxyXG5cclxuICAmX19xdWVzdGlvbm5haXJle1xyXG4gICAgbWFyZ2luLXRvcDogNzBweDtcclxuICB9XHJcblxyXG4gICZfX2J1dHRvbntcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIHBhZGRpbmc6IDVweDtcclxuICAgIG1hcmdpbjogMjBweCAwIDIwcHggMTA2cHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkbGlnaHQtZ3JheTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGNvbG9yOiAkZ3JheTtcclxuICAgIHdpZHRoOiAxNTBweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgkbGlnaHQtZ3JheSwgJHdoaXRlKTtcclxuICB9XHJcblxyXG4gICZfX2J1dHRvbjpob3ZlcntcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRncmF5O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgY29sb3I6ICRkYXJrLWdyYXk7XHJcbiAgICB3aWR0aDogMTUwcHg7XHJcbiAgfVxyXG59XHJcblxyXG4ucXVlc3Rpb25uYWlyZXtcclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogOTZweCAzNTBweDtcclxuICBncmlkLWdhcDogMTBweDtcclxuXHJcbiAgJl9fcXVlc3Rpb257XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgfVxyXG5cclxuICAmX190ZXh0e1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgJGxpZ2h0LWdyYXk7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBjb2xvcjogJGdyYXk7XHJcbiAgfVxyXG4gICZfX3RleHQ6Zm9jdXMtdmlzaWJsZXtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRncmF5O1xyXG4gICAgb3V0bGluZTogMDtcclxuICB9XHJcbn1cclxuIiwiLmZlZWRiYWNrIHtcbiAgY29sb3I6ICM0OTQ5NDk7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogNTAwcHg7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XG4gIGJveC1zaGFkb3c6IDJweCAycHggIzgwODA4MDtcbiAgZm9udC13ZWlnaHQ6IDgwMDtcbn1cblxuLmZvcm0ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4uZm9ybV9fdGl0bGUge1xuICBmb250LXNpemU6IDIwcHg7XG4gIHBhZGRpbmc6IDIwcHggMCAyMHB4IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogLTM4cHg7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjYTgzZjJhO1xuICBwYWRkaW5nOiA1cHggMjVweDtcbiAgd2lkdGg6IDMwMHB4O1xuICBtYXJnaW46IDE1cHggMDtcbiAgYm94LXNoYWRvdzogNHB4IDJweCA3cHggI2MyYzJjMjtcbn1cbi5mb3JtX190aXRsZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGhlaWdodDogMDtcbiAgd2lkdGg6IDA7XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJvcmRlci1jb2xvcjogIzY5MWQxNiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXdpZHRoOiAxNHB4IDBweCAwcHggMTZweDtcbiAgdG9wOiAxMDAlO1xuICBsZWZ0OiAwO1xufVxuLmZvcm1fX3F1ZXN0aW9ubmFpcmUge1xuICBtYXJnaW4tdG9wOiA3MHB4O1xufVxuLmZvcm1fX2J1dHRvbiB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgcGFkZGluZzogNXB4O1xuICBtYXJnaW46IDIwcHggMCAyMHB4IDEwNnB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzJjMmMyO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGNvbG9yOiAjODA4MDgwO1xuICB3aWR0aDogMTUwcHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCNjMmMyYzIsICNmZmYpO1xufVxuLmZvcm1fX2J1dHRvbjpob3ZlciB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM4MDgwODA7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgY29sb3I6ICM0OTQ5NDk7XG4gIHdpZHRoOiAxNTBweDtcbn1cblxuLnF1ZXN0aW9ubmFpcmUge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDk2cHggMzUwcHg7XG4gIGdyaWQtZ2FwOiAxMHB4O1xufVxuLnF1ZXN0aW9ubmFpcmVfX3F1ZXN0aW9uIHtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuLnF1ZXN0aW9ubmFpcmVfX3RleHQge1xuICBmb250LXNpemU6IDE0cHg7XG4gIHBhZGRpbmc6IDVweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MyYzJjMjtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBjb2xvcjogIzgwODA4MDtcbn1cbi5xdWVzdGlvbm5haXJlX190ZXh0OmZvY3VzLXZpc2libGUge1xuICBib3JkZXI6IDFweCBzb2xpZCAjODA4MDgwO1xuICBvdXRsaW5lOiAwO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;AAYA,OAAM,MAAOA,aAAa;EAwBxBC,YAAoBC,eAAgC,EAAUC,MAAc;IAAxD,oBAAe,GAAfD,eAAe;IAA2B,WAAM,GAANC,MAAM;IApBpE,gBAAW,GAAQ,EAAE;IACrB,cAAS,GAAQ,EAAE;IACnB,eAAU,GAAY,IAAI;IAE1B,aAAQ,GAAuB,IAAIC,GAAG,EAAE;IAExC,YAAO,GAAY;MACjBC,EAAE,EAAE,EAAE;MACNC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE;KACf;IAED,YAAO,GAAY;MACjBH,EAAE,EAAE,EAAE;MACNI,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE;KACd;EAE6E;EAE9EC,QAAQ;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACX,eAAe,CAACY,cAAc,EAAE;IACzD,IAAI,CAACC,UAAU,GAAG,IAAI,CAACb,eAAe,CAACc,YAAY,EAAE;IACrD,IAAI,CAACC,eAAe,EAAE;EACxB;EAIAA,eAAe;IACb,IAAI,CAACf,eAAe,CAACc,YAAY,EAAE,CAACE,SAAS,CAACC,IAAI,IAAG;MACnD,IAAI,CAACC,SAAS,GAAGD,IAAI;MAErB,KAAK,IAAIE,CAAC,IAAIF,IAAI,EAAC;QACjB,IAAI,CAACG,QAAQ,CAACC,GAAG,CAAC,IAAI,CAACH,SAAS,CAACC,CAAC,CAAC,CAAChB,EAAE,EAAE,IAAI,CAACe,SAAS,CAACC,CAAC,CAAC,CAACG,SAAS,CAAC;;IAExE,CAAC,CAAC;EAEJ;EAEAC,UAAU;IACR,IAAI,CAACvB,eAAe,CAACY,cAAc,EAAE,CAACI,SAAS,CAACC,IAAI,IAAG;MACrD,IAAI,CAACO,WAAW,GAAGP,IAAI;MACvB,KAAK,IAAIE,CAAC,IAAI,IAAI,CAACK,WAAW,EAAC;QAE7B,IAAK,IAAI,CAACA,WAAW,CAACL,CAAC,CAAC,CAACd,YAAY,IAAI,IAAI,CAACoB,OAAO,CAACpB,YAAY,IAAM,IAAI,CAACmB,WAAW,CAACL,CAAC,CAAC,CAACb,YAAY,IAAI,IAAI,CAACmB,OAAO,CAACnB,YAAa,EAAC;UACrI,IAAI,CAACoB,UAAU,GAAG,KAAK;;;IAG7B,CAAC,CAAC;IAEF,IAAI,IAAI,CAACA,UAAU,IAAI,IAAI,EAAC;MAC1B,IAAI,CAAC1B,eAAe,CAAC2B,UAAU,CAAC,IAAI,CAACF,OAAO,CAAC,CAC5CT,SAAS,CAAC;QACPY,IAAI,EAAGC,QAAQ,IAAI;UACnBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QAErB;OAED,CACF;;IAKL;IACA;IACA;IACA;IACA;IACA;EAGA;;;AA9EW/B,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAkC;EAAAC;EAAAC;EAAAC;EAAAC;AAAA","names":["FormComponent","constructor","requestsServise","router","Map","id","contactName","contactEmail","contactPhone","topicId","contactId","messageText","ngOnInit","contactList$","getAllContacts","topicList$","getAllTopics","refreshTopicMap","subscribe","data","topicList","i","TopicMap","set","topicName","addRequest","contactList","contact","newContact","addContact","next","feesbbaa","console","log","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["D:\\Мои работы (сайты)\\Feedback_form_ST\\FeedbackFormStUI\\src\\app\\components\\form\\form.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Contact } from 'src/app/models/contact.model';\nimport { Message } from 'src/app/models/message.model';\nimport { RequestsService } from 'src/app/services/requests.service';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class FormComponent implements OnInit {\n\n  contactList$!: Observable<any[]>;\n  topicList$!: Observable<any[]>;\n  contactList: any = [];\n  topicList: any = [];\n  newContact: boolean = true;\n\n  TopicMap:Map<string, string> = new Map();\n\n  contact: Contact = {\n    id: '',\n    contactName: '',\n    contactEmail: '',\n    contactPhone: '',\n  };\n\n  message: Message = {\n    id: '',\n    topicId: '',\n    contactId: '',\n    messageText: '',\n  };\n\n  constructor(private requestsServise: RequestsService, private router: Router){}\n\n  ngOnInit(): void {\n    this.contactList$ = this.requestsServise.getAllContacts();\n    this.topicList$ = this.requestsServise.getAllTopics();\n    this.refreshTopicMap();\n  }\n\n\n\n  refreshTopicMap(){\n    this.requestsServise.getAllTopics().subscribe(data => {\n      this.topicList = data;\n\n      for( let i of data){\n        this.TopicMap.set(this.topicList[i].id, this.topicList[i].topicName)\n      }\n    })\n    \n  }\n\n  addRequest() {\n    this.requestsServise.getAllContacts().subscribe(data => {\n      this.contactList = data;\n      for (let i in this.contactList){\n\n        if ((this.contactList[i].contactEmail == this.contact.contactEmail) && (this.contactList[i].contactPhone == this.contact.contactPhone)){\n          this.newContact = false;\n        }\n      }\n    });\n\n    if (this.newContact == true){\n      this.requestsServise.addContact(this.contact)\n      .subscribe({\n          next: (feesbbaa) => {\n          console.log(feesbbaa);\n          \n          }\n        \n        }\n      );\n      \n    }\n \n\n  //   this.requestsServise.addMessage(this.feedback)\n  //   .subscribe({\n  //     next: (feedback) =>{\n  //       this.router.navigate(['request/:id']);\n  //     }\n  //   });\n\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}