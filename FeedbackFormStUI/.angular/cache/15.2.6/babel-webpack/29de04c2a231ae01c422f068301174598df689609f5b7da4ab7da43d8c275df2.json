{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/requests.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction FormComponent_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const topic_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", topic_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(topic_r2.topicName);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    validation: a0\n  };\n};\nexport class FormComponent {\n  constructor(requestsServise, router, formBuilder) {\n    this.requestsServise = requestsServise;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.contactList = [];\n    this.topicList = [];\n    this.newContact = true;\n    this.TopicMap = new Map();\n    this.contact = {\n      id: 0,\n      ContactName: '',\n      ContactEmail: '',\n      ContactPhone: ''\n    };\n    this.message = {\n      id: 0,\n      TopicId: 0,\n      ContactId: 0,\n      MessageText: ''\n    };\n    this.formProv = new FormGroup({\n      name: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      phone: new FormControl('', [Validators.required, Validators.pattern('[-+()0-9]{11,15}')]),\n      topic: new FormControl('', Validators.required),\n      mes: new FormControl('', Validators.required)\n    });\n  }\n  ngOnInit() {\n    this.contactList$ = this.requestsServise.getAllContacts();\n    this.topicList$ = this.requestsServise.getAllTopics();\n    this.refreshTopicMap();\n  }\n  refreshTopicMap() {\n    this.requestsServise.getAllTopics().subscribe(data => {\n      this.topicList = data;\n      for (let i of data) {\n        this.TopicMap.set(this.topicList[i].id, this.topicList[i].topicName);\n      }\n    });\n  }\n  get name() {\n    return this.formProv.get('name');\n  }\n  get email() {\n    return this.formProv.get('email');\n  }\n  get phone() {\n    return this.formProv.get('phone');\n  }\n  get topic() {\n    return this.formProv.get('topic');\n  }\n  get mes() {\n    return this.formProv.get('mes');\n  }\n  addRequest() {\n    console.warn(this.formProv.value);\n    this.requestsServise.getAllContacts().subscribe(data => {\n      this.contactList = data;\n      this.newContact = true;\n      for (let i in this.contactList) {\n        if (this.contactList[i].contactEmail == this.contact.ContactEmail && this.contactList[i].contactPhone == this.contact.ContactPhone) {\n          this.newContact = false;\n          this.message.ContactId = data[+i].id;\n        }\n      }\n    });\n    this.requestsServise.addMessage(this.message).subscribe({\n      next: result => {\n        this.router.navigate(['request/:id']);\n      }\n    });\n    if (this.newContact == true) {\n      this.requestsServise.addContact(this.contact).subscribe({\n        next: result => {\n          this.message.ContactId = Object.values(result)[0];\n          this.requestsServise.addMessage(this.message).subscribe({\n            next: result => {\n              this.router.navigate(['request/:id']);\n            }\n          });\n        }\n      });\n    }\n  }\n}\nFormComponent.ɵfac = function FormComponent_Factory(t) {\n  return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.RequestsService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormComponent,\n  selectors: [[\"app-form\"]],\n  decls: 25,\n  vars: 25,\n  consts: [[1, \"feedback\"], [1, \"feedback__form\", \"form\", 3, \"formGroup\", \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"form__title\"], [1, \"form__questionnaire\", \"questionnaire\"], [\"for\", \"name\", 1, \"questionnaire__question\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"formControlName\", \"name\", 1, \"questionnaire__text\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"for\", \"email\", 1, \"questionnaire__question\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"email\", 1, \"questionnaire__text\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"for\", \"phone\", 1, \"questionnaire__question\"], [\"type\", \"text\", \"id\", \"phone\", \"name\", \"phone\", \"formControlName\", \"phone\", 1, \"questionnaire__text\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [1, \"questionnaire__question\"], [\"name\", \"topicId\", \"id\", \"topicId\", \"formControlName\", \"topic\", 1, \"questionnaire__text\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"message\", 1, \"questionnaire__question\"], [\"name\", \"message\", \"id\", \"message\", \"cols\", \"30\", \"rows\", \"4\", \"name\", \"message\", \"formControlName\", \"mes\", 1, \"questionnaire__text\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"form__button\", 3, \"disabled\"], [3, \"value\"]],\n  template: function FormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function FormComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.addRequest();\n      });\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵtext(4, \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u043D\\u0430\\u043C\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5);\n      i0.ɵɵtext(7, \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.contact.ContactName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 7);\n      i0.ɵɵtext(10, \"\\u0412\\u0430\\u0448 Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.contact.ContactEmail = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 9);\n      i0.ɵɵtext(13, \"\\u0412\\u0430\\u0448 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.contact.ContactPhone = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 11);\n      i0.ɵɵtext(16, \"\\u0422\\u0435\\u043C\\u0430:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"select\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_select_ngModelChange_17_listener($event) {\n        return ctx.message.TopicId = $event;\n      });\n      i0.ɵɵtemplate(18, FormComponent_option_18_Template, 2, 2, \"option\", 13);\n      i0.ɵɵpipe(19, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 14);\n      i0.ɵɵtext(21, \"\\u0412\\u0430\\u0448\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"textarea\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_textarea_ngModelChange_22_listener($event) {\n        return ctx.message.MessageText = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"button\", 16);\n      i0.ɵɵtext(24, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0438\\u0441\\u044C\\u043C\\u043E!\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.formProv);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.contact.ContactName)(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ctx.name && ctx.name.invalid && ctx.name.touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.contact.ContactEmail)(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ctx.email && ctx.email.invalid && ctx.email.touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.contact.ContactPhone)(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx.phone && ctx.phone.invalid && ctx.phone.touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.message.TopicId)(\"ngClass\", i0.ɵɵpureFunction1(21, _c0, ctx.topic && ctx.topic.touched && !ctx.topic.dirty));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(19, 13, ctx.topicList$));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.message.MessageText)(\"ngClass\", i0.ɵɵpureFunction1(23, _c0, ctx.mes && ctx.mes.invalid && ctx.mes.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.formProv.invalid);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i4.AsyncPipe],\n  styles: [\".feedback[_ngcontent-%COMP%] {\\n  color: #494949;\\n  display: flex;\\n  justify-content: center;\\n  width: 500px;\\n  background: #fff;\\n  border-radius: 12px;\\n  box-shadow: 2px 2px #808080;\\n  font-weight: 800;\\n}\\n\\n.form[_ngcontent-%COMP%] {\\n  position: relative;\\n}\\n.form__title[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  padding: 20px 0 20px 0;\\n  position: absolute;\\n  left: -38px;\\n  color: #fff;\\n  background: #a83f2a;\\n  padding: 5px 25px;\\n  width: 300px;\\n  margin: 15px 0;\\n  box-shadow: 4px 2px 7px #c2c2c2;\\n}\\n.form__title[_ngcontent-%COMP%]:before {\\n  content: \\\"\\\";\\n  position: absolute;\\n  height: 0;\\n  width: 0;\\n  border-style: solid;\\n  border-color: #691d16 transparent transparent;\\n  border-width: 14px 0px 0px 16px;\\n  top: 100%;\\n  left: 0;\\n}\\n.form__questionnaire[_ngcontent-%COMP%] {\\n  margin-top: 70px;\\n}\\n.form__button[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  padding: 5px;\\n  margin: 20px 0 20px 106px;\\n  border: 1px solid #c2c2c2;\\n  border-radius: 5px;\\n  color: #808080;\\n  width: 150px;\\n  cursor: pointer;\\n  background: linear-gradient(#c2c2c2, #fff);\\n}\\n.form__button[_ngcontent-%COMP%]:hover {\\n  border: 1px solid #808080;\\n  border-radius: 5px;\\n  color: #494949;\\n  width: 150px;\\n}\\n\\n.questionnaire[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: 96px 350px;\\n  grid-gap: 10px;\\n}\\n.questionnaire__question[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n}\\n.questionnaire__text[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  padding: 5px;\\n  border: 1px solid #c2c2c2;\\n  border-radius: 5px;\\n  color: #808080;\\n}\\n.questionnaire__text[_ngcontent-%COMP%]:focus-visible {\\n  border: 1px solid #808080;\\n  outline: 0;\\n}\\n\\n.validation[_ngcontent-%COMP%] {\\n  border-color: #a83f2a;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9mb3JtL2Zvcm0uY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi8uLi8lRDAlOUMlRDAlQkUlRDAlQjglMjAlRDElODAlRDAlQjAlRDAlQjElRDAlQkUlRDElODIlRDElOEIlMjAoJUQxJTgxJUQwJUIwJUQwJUI5JUQxJTgyJUQxJThCKS9GZWVkYmFja19mb3JtX1NUL0ZlZWRiYWNrRm9ybVN0VUkvc3JjL2FwcC9jb21wb25lbnRzL2Zvcm0vZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFRQTtFQUNFLGNBUFU7RUFRVixhQUFBO0VBQ0EsdUJBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBYk07RUFjTixtQkFBQTtFQUNBLDJCQUFBO0VBQ0EsZ0JBQUE7QUNQRjs7QURVQTtFQUNDLGtCQUFBO0FDUEQ7QURTRTtFQUNFLGVBQUE7RUFDQSxzQkFBQTtFQUNBLGtCQUFBO0VBQ0QsV0FBQTtFQUNBLFdBQUE7RUFDQSxtQkF4Qkc7RUF5QkgsaUJBQUE7RUFDQyxZQUFBO0VBQ0EsY0FBQTtFQUNBLCtCQUFBO0FDUEo7QURXRTtFQUNFLFdBQUE7RUFDQSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxRQUFBO0VBQ0EsbUJBQUE7RUFDQSw2Q0FBQTtFQUNBLCtCQUFBO0VBQ0EsU0FBQTtFQUNBLE9BQUE7QUNUSjtBRFlFO0VBQ0UsZ0JBQUE7QUNWSjtBRGFFO0VBQ0UsZUFBQTtFQUNBLFlBQUE7RUFDQSx5QkFBQTtFQUNBLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQXpERztFQTBESCxZQUFBO0VBQ0EsZUFBQTtFQUNBLDBDQUFBO0FDWEo7QURjRTtFQUNFLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQWpFUTtFQWtFUixZQUFBO0FDWko7O0FEZ0JBO0VBQ0UsYUFBQTtFQUNBLGlDQUFBO0VBQ0EsY0FBQTtBQ2JGO0FEZUU7RUFDRSxlQUFBO0FDYko7QURnQkU7RUFDRSxlQUFBO0VBQ0EsWUFBQTtFQUNBLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQXJGRztBQ3VFUDtBRGdCRTtFQUNFLHlCQUFBO0VBQ0EsVUFBQTtBQ2RKOztBRGtCQTtFQUNFLHFCQTNGSTtBQzRFTiIsInNvdXJjZXNDb250ZW50IjpbIiR3aGl0ZTogI2ZmZjtcclxuJGdyYXk6ICM4MDgwODA7XHJcbiRkYXJrLWdyYXk6ICM0OTQ5NDk7XHJcbiRsaWdodC1ncmF5OiAjYzJjMmMyO1xyXG4kcmVkOiAjYTgzZjJhO1xyXG4kZGFyay1yZWQ6ICM2OTFkMTY7XHJcblxyXG5cclxuLmZlZWRiYWNre1xyXG4gIGNvbG9yOiAkZGFyay1ncmF5O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgd2lkdGg6IDUwMHB4O1xyXG4gIGJhY2tncm91bmQ6ICR3aGl0ZTtcclxuICBib3JkZXItcmFkaXVzOiAxMnB4O1xyXG4gIGJveC1zaGFkb3c6IDJweCAycHggJGdyYXk7XHJcbiAgZm9udC13ZWlnaHQ6IDgwMDtcclxufVxyXG5cclxuLmZvcm17XHJcblx0cG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIFxyXG4gICZfX3RpdGxle1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgcGFkZGluZzogMjBweCAwIDIwcHggMDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHQgIGxlZnQ6IC0zOHB4O1xyXG5cdCAgY29sb3I6ICNmZmY7XHJcblx0ICBiYWNrZ3JvdW5kOiAkcmVkO1xyXG5cdCAgcGFkZGluZzogNXB4IDI1cHg7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbiAgICBtYXJnaW46IDE1cHggMDtcclxuICAgIGJveC1zaGFkb3c6IDRweCAycHggN3B4ICRsaWdodC1ncmF5O1xyXG4gIH1cclxuXHJcblxyXG4gICZfX3RpdGxlOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgaGVpZ2h0OiAwO1xyXG4gICAgd2lkdGg6IDA7XHJcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gICAgYm9yZGVyLWNvbG9yOiAkZGFyay1yZWQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItd2lkdGg6MTRweCAwcHggMHB4IDE2cHg7XHJcbiAgICB0b3A6IDEwMCU7XHJcbiAgICBsZWZ0OiAwO1xyXG4gIH1cclxuXHJcbiAgJl9fcXVlc3Rpb25uYWlyZXtcclxuICAgIG1hcmdpbi10b3A6IDcwcHg7XHJcbiAgfVxyXG5cclxuICAmX19idXR0b257XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBtYXJnaW46IDIwcHggMCAyMHB4IDEwNnB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgJGxpZ2h0LWdyYXk7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBjb2xvcjogJGdyYXk7XHJcbiAgICB3aWR0aDogMTUwcHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoJGxpZ2h0LWdyYXksICR3aGl0ZSk7XHJcbiAgfVxyXG5cclxuICAmX19idXR0b246aG92ZXJ7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkZ3JheTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGNvbG9yOiAkZGFyay1ncmF5O1xyXG4gICAgd2lkdGg6IDE1MHB4O1xyXG4gIH1cclxufVxyXG5cclxuLnF1ZXN0aW9ubmFpcmV7XHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDk2cHggMzUwcHg7XHJcbiAgZ3JpZC1nYXA6IDEwcHg7XHJcblxyXG4gICZfX3F1ZXN0aW9ue1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gIH1cclxuXHJcbiAgJl9fdGV4dHtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIHBhZGRpbmc6IDVweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRsaWdodC1ncmF5O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgY29sb3I6ICRncmF5O1xyXG4gIH1cclxuICAmX190ZXh0OmZvY3VzLXZpc2libGV7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkZ3JheTtcclxuICAgIG91dGxpbmU6IDA7XHJcbiAgfVxyXG59XHJcblxyXG4udmFsaWRhdGlvbntcclxuICBib3JkZXItY29sb3I6ICRyZWQ7XHJcbn1cclxuIiwiLmZlZWRiYWNrIHtcbiAgY29sb3I6ICM0OTQ5NDk7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogNTAwcHg7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XG4gIGJveC1zaGFkb3c6IDJweCAycHggIzgwODA4MDtcbiAgZm9udC13ZWlnaHQ6IDgwMDtcbn1cblxuLmZvcm0ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4uZm9ybV9fdGl0bGUge1xuICBmb250LXNpemU6IDIwcHg7XG4gIHBhZGRpbmc6IDIwcHggMCAyMHB4IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogLTM4cHg7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjYTgzZjJhO1xuICBwYWRkaW5nOiA1cHggMjVweDtcbiAgd2lkdGg6IDMwMHB4O1xuICBtYXJnaW46IDE1cHggMDtcbiAgYm94LXNoYWRvdzogNHB4IDJweCA3cHggI2MyYzJjMjtcbn1cbi5mb3JtX190aXRsZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGhlaWdodDogMDtcbiAgd2lkdGg6IDA7XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJvcmRlci1jb2xvcjogIzY5MWQxNiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXdpZHRoOiAxNHB4IDBweCAwcHggMTZweDtcbiAgdG9wOiAxMDAlO1xuICBsZWZ0OiAwO1xufVxuLmZvcm1fX3F1ZXN0aW9ubmFpcmUge1xuICBtYXJnaW4tdG9wOiA3MHB4O1xufVxuLmZvcm1fX2J1dHRvbiB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgcGFkZGluZzogNXB4O1xuICBtYXJnaW46IDIwcHggMCAyMHB4IDEwNnB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzJjMmMyO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGNvbG9yOiAjODA4MDgwO1xuICB3aWR0aDogMTUwcHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCNjMmMyYzIsICNmZmYpO1xufVxuLmZvcm1fX2J1dHRvbjpob3ZlciB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM4MDgwODA7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgY29sb3I6ICM0OTQ5NDk7XG4gIHdpZHRoOiAxNTBweDtcbn1cblxuLnF1ZXN0aW9ubmFpcmUge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDk2cHggMzUwcHg7XG4gIGdyaWQtZ2FwOiAxMHB4O1xufVxuLnF1ZXN0aW9ubmFpcmVfX3F1ZXN0aW9uIHtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuLnF1ZXN0aW9ubmFpcmVfX3RleHQge1xuICBmb250LXNpemU6IDE0cHg7XG4gIHBhZGRpbmc6IDVweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MyYzJjMjtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBjb2xvcjogIzgwODA4MDtcbn1cbi5xdWVzdGlvbm5haXJlX190ZXh0OmZvY3VzLXZpc2libGUge1xuICBib3JkZXI6IDFweCBzb2xpZCAjODA4MDgwO1xuICBvdXRsaW5lOiAwO1xufVxuXG4udmFsaWRhdGlvbiB7XG4gIGJvcmRlci1jb2xvcjogI2E4M2YyYTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","FormComponent","constructor","requestsServise","router","formBuilder","Map","id","ContactName","ContactEmail","ContactPhone","TopicId","ContactId","MessageText","name","required","email","phone","pattern","topic","mes","ngOnInit","contactList$","getAllContacts","topicList$","getAllTopics","refreshTopicMap","subscribe","data","topicList","i","TopicMap","set","topicName","formProv","get","addRequest","console","warn","value","contactList","newContact","contactEmail","contact","contactPhone","message","addMessage","next","result","navigate","addContact","Object","values","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Мои работы (сайты)\\Feedback_form_ST\\FeedbackFormStUI\\src\\app\\components\\form\\form.component.ts","D:\\Мои работы (сайты)\\Feedback_form_ST\\FeedbackFormStUI\\src\\app\\components\\form\\form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Contact } from 'src/app/models/contact.model';\nimport { Message } from 'src/app/models/message.model';\nimport { RequestsService } from 'src/app/services/requests.service';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class FormComponent implements OnInit {\n\n  contactList$!: Observable<any[]>;\n  topicList$!: Observable<any[]>;\n  contactList: any = [];\n  topicList: any = [];\n  newContact: boolean = true;\n\n  TopicMap:Map<string, string> = new Map();\n\n  contact: Contact = {\n    id: 0,\n    ContactName: '',\n    ContactEmail: '',\n    ContactPhone: '',\n  };\n\n  message: Message = {\n    id: 0,\n    TopicId: 0,\n    ContactId: 0,\n    MessageText: '',\n  };\n\n  formProv = new FormGroup({\n    name: new FormControl('',Validators.required),\n    email: new FormControl('',[Validators.required, Validators.email]),\n    phone: new FormControl('',[Validators.required, Validators.pattern('[-+()0-9]{11,15}')]),\n    topic: new FormControl('',Validators.required),\n    mes:new FormControl('',Validators.required)\n  })\n\n  constructor(private requestsServise: RequestsService, private router: Router, private formBuilder: FormBuilder){}\n\n  ngOnInit(): void {\n    this.contactList$ = this.requestsServise.getAllContacts();\n    this.topicList$ = this.requestsServise.getAllTopics();\n    this.refreshTopicMap();\n  }\n\n\n\n  refreshTopicMap(){\n    this.requestsServise.getAllTopics().subscribe(data => {\n      this.topicList = data;\n\n      for( let i of data){\n        this.TopicMap.set(this.topicList[i].id, this.topicList[i].topicName)\n      }\n    })\n    \n  }\n\n  get name(){\n    return this.formProv.get('name');\n  }\n  get email(){\n    return this.formProv.get('email');\n  }\n  get phone(){\n    return this.formProv.get('phone');\n  }\n  get topic(){\n    return this.formProv.get('topic');\n  }\n  get mes(){\n    return this.formProv.get('mes');\n  }\n\n  addRequest() {\nconsole.warn(this.formProv.value);\n\n\n    this.requestsServise.getAllContacts().subscribe(data => {\n      this.contactList = data;\n      this.newContact = true;\n      for (let i in this.contactList){\n\n        if ((this.contactList[i].contactEmail == this.contact.ContactEmail) && (this.contactList[i].contactPhone == this.contact.ContactPhone)){\n          this.newContact = false; \n          this.message.ContactId = data[+i].id;          \n        }\n      }\n    \n    });\n    this.requestsServise.addMessage(this.message).subscribe({\n      next: (result) => {\n        this.router.navigate(['request/:id']);\n      }\n    });\n   \n\n    if (this.newContact == true){\n      this.requestsServise.addContact(this.contact).subscribe({\n        next: (result) => {\n          this.message.ContactId = Object.values(result)[0];\n          this.requestsServise.addMessage(this.message).subscribe({\n            next: (result) => {\n              this.router.navigate(['request/:id']);\n            }\n          });\n        }\n      });\n    \n\n    } \n\n\n    \n  }\n\n}\n","\n<div class=\"feedback\">\n  <form class=\"feedback__form form\" #form=\"ngForm\"  (ngSubmit)=\"addRequest()\" [formGroup]=\"formProv\">\n    <div class=\"form__title\">Напишите нам</div>\n    <div class=\"form__questionnaire questionnaire\">\n       <div for=\"name\" class=\"questionnaire__question\">Ваше имя:</div>\n      <input type=\"text\" class=\"questionnaire__text\" id=\"name\" name =\"name\" [(ngModel)] = \"contact.ContactName\" formControlName = 'name' [ngClass]=\"{validation:(name&&name.invalid&&name.touched)}\">\n\n      <div for=\"email\" class=\"questionnaire__question\">Ваш Email:</div>\n      <input type=\"email\" class=\"questionnaire__text\" id=\"email\" name =\"email\" [(ngModel)] = \"contact.ContactEmail\" formControlName = 'email' [ngClass]=\"{validation:(email&&email.invalid&&email.touched)}\">\n\n      <div for=\"phone\" class=\"questionnaire__question\">Ваш телефон:</div>\n      <input type=\"text\" class=\"questionnaire__text\" id=\"phone\" name =\"phone\" [(ngModel)] = \"contact.ContactPhone\" formControlName = 'phone' [ngClass]=\"{validation:(phone&&phone.invalid&&phone.touched)}\">\n\n      <div class=\"questionnaire__question\">Тема:</div>\n      <select name=\"topicId\" id=\"topicId\" class=\"questionnaire__text\" [(ngModel)] = \"message.TopicId\" formControlName = 'topic' [ngClass]=\"{validation:topic && topic.touched && !topic.dirty}\">\n        <option *ngFor=\"let topic of topicList$|async\" [value]=\"topic.id\">{{topic.topicName}}</option>\n      </select>\n\n      <div for=\"message\" class=\"questionnaire__question\">Ваше сообщение:</div>\n      <textarea name=\"message\" id=\"message\" cols=\"30\" rows=\"4\" class=\"questionnaire__text\" name =\"message\" [(ngModel)] = \"message.MessageText\" formControlName = 'mes' [ngClass]=\"{validation:(mes&&mes.invalid&&mes.touched)}\"></textarea> \n\n    </div>\n\n    <button type=\"submit\" class=\"form__button\" [disabled]=\"formProv.invalid\">Отправить письмо!</button>\n  </form>\n\n</div>   \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}