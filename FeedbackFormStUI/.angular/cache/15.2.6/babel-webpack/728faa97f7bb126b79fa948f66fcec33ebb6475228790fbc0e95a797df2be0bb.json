{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/requests.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class FormComponent {\n  constructor(requestsServise, router, formBuilder) {\n    this.requestsServise = requestsServise;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.contactList = [];\n    this.topicList = [];\n    this.newContact = true;\n    this.TopicMap = new Map();\n    this.contact = {\n      id: 0,\n      ContactName: '',\n      ContactEmail: '',\n      ContactPhone: ''\n    };\n    this.message = {\n      id: 0,\n      TopicId: 0,\n      ContactId: 0,\n      MessageText: ''\n    };\n    this.formProv = new FormGroup({\n      name: new FormControl('', Validators.required)\n    });\n  }\n  ngOnInit() {\n    this.contactList$ = this.requestsServise.getAllContacts();\n    this.topicList$ = this.requestsServise.getAllTopics();\n    this.refreshTopicMap();\n  }\n  refreshTopicMap() {\n    this.requestsServise.getAllTopics().subscribe(data => {\n      this.topicList = data;\n      for (let i of data) {\n        this.TopicMap.set(this.topicList[i].id, this.topicList[i].topicName);\n      }\n    });\n  }\n  get name() {\n    return this.formProv.get('name');\n  }\n  addRequest() {\n    console.warn(this.formProv.value);\n    //   this.requestsServise.getAllContacts().subscribe(data => {\n    //     this.contactList = data;\n    //     this.newContact = true;\n    //     for (let i in this.contactList){\n    //       if ((this.contactList[i].contactEmail == this.contact.ContactEmail) && (this.contactList[i].contactPhone == this.contact.ContactPhone)){\n    //         this.newContact = false; \n    //         this.message.ContactId = data[+i].id;          \n    //       }\n    //     }\n    //   });\n    //   this.requestsServise.addMessage(this.message).subscribe({\n    //     next: (result) => {\n    //       this.router.navigate(['request/:id']);\n    //     }\n    //   });\n    //   if (this.newContact == true){\n    //     this.requestsServise.addContact(this.contact).subscribe({\n    //       next: (result) => {\n    //         this.message.ContactId = Object.values(result)[0];\n    //         this.requestsServise.addMessage(this.message).subscribe({\n    //           next: (result) => {\n    //             this.router.navigate(['request/:id']);\n    //           }\n    //         });\n    //       }\n    //     });\n    //   } \n  }\n}\n\nFormComponent.ɵfac = function FormComponent_Factory(t) {\n  return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.RequestsService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormComponent,\n  selectors: [[\"app-form\"]],\n  decls: 0,\n  vars: 0,\n  template: function FormComponent_Template(rf, ctx) {},\n  styles: [\".feedback[_ngcontent-%COMP%] {\\n  color: #494949;\\n  display: flex;\\n  justify-content: center;\\n  width: 500px;\\n  background: #fff;\\n  border-radius: 12px;\\n  box-shadow: 2px 2px #808080;\\n  font-weight: 800;\\n}\\n\\n.form[_ngcontent-%COMP%] {\\n  position: relative;\\n}\\n.form__title[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  padding: 20px 0 20px 0;\\n  position: absolute;\\n  left: -38px;\\n  color: #fff;\\n  background: #a83f2a;\\n  padding: 5px 25px;\\n  width: 300px;\\n  margin: 15px 0;\\n  box-shadow: 4px 2px 7px #c2c2c2;\\n}\\n.form__title[_ngcontent-%COMP%]:before {\\n  content: \\\"\\\";\\n  position: absolute;\\n  height: 0;\\n  width: 0;\\n  border-style: solid;\\n  border-color: #691d16 transparent transparent;\\n  border-width: 14px 0px 0px 16px;\\n  top: 100%;\\n  left: 0;\\n}\\n.form__questionnaire[_ngcontent-%COMP%] {\\n  margin-top: 70px;\\n}\\n.form__button[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  padding: 5px;\\n  margin: 20px 0 20px 106px;\\n  border: 1px solid #c2c2c2;\\n  border-radius: 5px;\\n  color: #808080;\\n  width: 150px;\\n  cursor: pointer;\\n  background: linear-gradient(#c2c2c2, #fff);\\n}\\n.form__button[_ngcontent-%COMP%]:hover {\\n  border: 1px solid #808080;\\n  border-radius: 5px;\\n  color: #494949;\\n  width: 150px;\\n}\\n\\n.questionnaire[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: 96px 350px;\\n  grid-gap: 10px;\\n}\\n.questionnaire__question[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n}\\n.questionnaire__text[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  padding: 5px;\\n  border: 1px solid #c2c2c2;\\n  border-radius: 5px;\\n  color: #808080;\\n}\\n.questionnaire__text[_ngcontent-%COMP%]:focus-visible {\\n  border: 1px solid #808080;\\n  outline: 0;\\n}\\n\\n.validation[_ngcontent-%COMP%] {\\n  border-color: #a83f2a;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9mb3JtL2Zvcm0uY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi8uLi8lRDAlOUMlRDAlQkUlRDAlQjglMjAlRDElODAlRDAlQjAlRDAlQjElRDAlQkUlRDElODIlRDElOEIlMjAoJUQxJTgxJUQwJUIwJUQwJUI5JUQxJTgyJUQxJThCKS9GZWVkYmFja19mb3JtX1NUL0ZlZWRiYWNrRm9ybVN0VUkvc3JjL2FwcC9jb21wb25lbnRzL2Zvcm0vZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFRQTtFQUNFLGNBUFU7RUFRVixhQUFBO0VBQ0EsdUJBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBYk07RUFjTixtQkFBQTtFQUNBLDJCQUFBO0VBQ0EsZ0JBQUE7QUNQRjs7QURVQTtFQUNDLGtCQUFBO0FDUEQ7QURTRTtFQUNFLGVBQUE7RUFDQSxzQkFBQTtFQUNBLGtCQUFBO0VBQ0QsV0FBQTtFQUNBLFdBQUE7RUFDQSxtQkF4Qkc7RUF5QkgsaUJBQUE7RUFDQyxZQUFBO0VBQ0EsY0FBQTtFQUNBLCtCQUFBO0FDUEo7QURXRTtFQUNFLFdBQUE7RUFDQSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxRQUFBO0VBQ0EsbUJBQUE7RUFDQSw2Q0FBQTtFQUNBLCtCQUFBO0VBQ0EsU0FBQTtFQUNBLE9BQUE7QUNUSjtBRFlFO0VBQ0UsZ0JBQUE7QUNWSjtBRGFFO0VBQ0UsZUFBQTtFQUNBLFlBQUE7RUFDQSx5QkFBQTtFQUNBLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQXpERztFQTBESCxZQUFBO0VBQ0EsZUFBQTtFQUNBLDBDQUFBO0FDWEo7QURjRTtFQUNFLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQWpFUTtFQWtFUixZQUFBO0FDWko7O0FEZ0JBO0VBQ0UsYUFBQTtFQUNBLGlDQUFBO0VBQ0EsY0FBQTtBQ2JGO0FEZUU7RUFDRSxlQUFBO0FDYko7QURnQkU7RUFDRSxlQUFBO0VBQ0EsWUFBQTtFQUNBLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQXJGRztBQ3VFUDtBRGdCRTtFQUNFLHlCQUFBO0VBQ0EsVUFBQTtBQ2RKOztBRGtCQTtFQUNFLHFCQTNGSTtBQzRFTiIsInNvdXJjZXNDb250ZW50IjpbIiR3aGl0ZTogI2ZmZjtcclxuJGdyYXk6ICM4MDgwODA7XHJcbiRkYXJrLWdyYXk6ICM0OTQ5NDk7XHJcbiRsaWdodC1ncmF5OiAjYzJjMmMyO1xyXG4kcmVkOiAjYTgzZjJhO1xyXG4kZGFyay1yZWQ6ICM2OTFkMTY7XHJcblxyXG5cclxuLmZlZWRiYWNre1xyXG4gIGNvbG9yOiAkZGFyay1ncmF5O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgd2lkdGg6IDUwMHB4O1xyXG4gIGJhY2tncm91bmQ6ICR3aGl0ZTtcclxuICBib3JkZXItcmFkaXVzOiAxMnB4O1xyXG4gIGJveC1zaGFkb3c6IDJweCAycHggJGdyYXk7XHJcbiAgZm9udC13ZWlnaHQ6IDgwMDtcclxufVxyXG5cclxuLmZvcm17XHJcblx0cG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIFxyXG4gICZfX3RpdGxle1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgcGFkZGluZzogMjBweCAwIDIwcHggMDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHQgIGxlZnQ6IC0zOHB4O1xyXG5cdCAgY29sb3I6ICNmZmY7XHJcblx0ICBiYWNrZ3JvdW5kOiAkcmVkO1xyXG5cdCAgcGFkZGluZzogNXB4IDI1cHg7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbiAgICBtYXJnaW46IDE1cHggMDtcclxuICAgIGJveC1zaGFkb3c6IDRweCAycHggN3B4ICRsaWdodC1ncmF5O1xyXG4gIH1cclxuXHJcblxyXG4gICZfX3RpdGxlOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgaGVpZ2h0OiAwO1xyXG4gICAgd2lkdGg6IDA7XHJcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gICAgYm9yZGVyLWNvbG9yOiAkZGFyay1yZWQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItd2lkdGg6MTRweCAwcHggMHB4IDE2cHg7XHJcbiAgICB0b3A6IDEwMCU7XHJcbiAgICBsZWZ0OiAwO1xyXG4gIH1cclxuXHJcbiAgJl9fcXVlc3Rpb25uYWlyZXtcclxuICAgIG1hcmdpbi10b3A6IDcwcHg7XHJcbiAgfVxyXG5cclxuICAmX19idXR0b257XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBtYXJnaW46IDIwcHggMCAyMHB4IDEwNnB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgJGxpZ2h0LWdyYXk7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBjb2xvcjogJGdyYXk7XHJcbiAgICB3aWR0aDogMTUwcHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoJGxpZ2h0LWdyYXksICR3aGl0ZSk7XHJcbiAgfVxyXG5cclxuICAmX19idXR0b246aG92ZXJ7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkZ3JheTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGNvbG9yOiAkZGFyay1ncmF5O1xyXG4gICAgd2lkdGg6IDE1MHB4O1xyXG4gIH1cclxufVxyXG5cclxuLnF1ZXN0aW9ubmFpcmV7XHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDk2cHggMzUwcHg7XHJcbiAgZ3JpZC1nYXA6IDEwcHg7XHJcblxyXG4gICZfX3F1ZXN0aW9ue1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gIH1cclxuXHJcbiAgJl9fdGV4dHtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIHBhZGRpbmc6IDVweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRsaWdodC1ncmF5O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgY29sb3I6ICRncmF5O1xyXG4gIH1cclxuICAmX190ZXh0OmZvY3VzLXZpc2libGV7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkZ3JheTtcclxuICAgIG91dGxpbmU6IDA7XHJcbiAgfVxyXG59XHJcblxyXG4udmFsaWRhdGlvbntcclxuICBib3JkZXItY29sb3I6ICRyZWQ7XHJcbn1cclxuIiwiLmZlZWRiYWNrIHtcbiAgY29sb3I6ICM0OTQ5NDk7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogNTAwcHg7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XG4gIGJveC1zaGFkb3c6IDJweCAycHggIzgwODA4MDtcbiAgZm9udC13ZWlnaHQ6IDgwMDtcbn1cblxuLmZvcm0ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4uZm9ybV9fdGl0bGUge1xuICBmb250LXNpemU6IDIwcHg7XG4gIHBhZGRpbmc6IDIwcHggMCAyMHB4IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogLTM4cHg7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjYTgzZjJhO1xuICBwYWRkaW5nOiA1cHggMjVweDtcbiAgd2lkdGg6IDMwMHB4O1xuICBtYXJnaW46IDE1cHggMDtcbiAgYm94LXNoYWRvdzogNHB4IDJweCA3cHggI2MyYzJjMjtcbn1cbi5mb3JtX190aXRsZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGhlaWdodDogMDtcbiAgd2lkdGg6IDA7XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJvcmRlci1jb2xvcjogIzY5MWQxNiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXdpZHRoOiAxNHB4IDBweCAwcHggMTZweDtcbiAgdG9wOiAxMDAlO1xuICBsZWZ0OiAwO1xufVxuLmZvcm1fX3F1ZXN0aW9ubmFpcmUge1xuICBtYXJnaW4tdG9wOiA3MHB4O1xufVxuLmZvcm1fX2J1dHRvbiB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgcGFkZGluZzogNXB4O1xuICBtYXJnaW46IDIwcHggMCAyMHB4IDEwNnB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzJjMmMyO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGNvbG9yOiAjODA4MDgwO1xuICB3aWR0aDogMTUwcHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCNjMmMyYzIsICNmZmYpO1xufVxuLmZvcm1fX2J1dHRvbjpob3ZlciB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM4MDgwODA7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgY29sb3I6ICM0OTQ5NDk7XG4gIHdpZHRoOiAxNTBweDtcbn1cblxuLnF1ZXN0aW9ubmFpcmUge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDk2cHggMzUwcHg7XG4gIGdyaWQtZ2FwOiAxMHB4O1xufVxuLnF1ZXN0aW9ubmFpcmVfX3F1ZXN0aW9uIHtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuLnF1ZXN0aW9ubmFpcmVfX3RleHQge1xuICBmb250LXNpemU6IDE0cHg7XG4gIHBhZGRpbmc6IDVweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MyYzJjMjtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBjb2xvcjogIzgwODA4MDtcbn1cbi5xdWVzdGlvbm5haXJlX190ZXh0OmZvY3VzLXZpc2libGUge1xuICBib3JkZXI6IDFweCBzb2xpZCAjODA4MDgwO1xuICBvdXRsaW5lOiAwO1xufVxuXG4udmFsaWRhdGlvbiB7XG4gIGJvcmRlci1jb2xvcjogI2E4M2YyYTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAAsBA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;AAYhF,OAAM,MAAOC,aAAa;EA6BxBC,YAAoBC,eAAgC,EAAUC,MAAc,EAAUC,WAAwB;IAA1F,oBAAe,GAAfF,eAAe;IAA2B,WAAM,GAANC,MAAM;IAAkB,gBAAW,GAAXC,WAAW;IAzBjG,gBAAW,GAAQ,EAAE;IACrB,cAAS,GAAQ,EAAE;IACnB,eAAU,GAAY,IAAI;IAE1B,aAAQ,GAAuB,IAAIC,GAAG,EAAE;IAExC,YAAO,GAAY;MACjBC,EAAE,EAAE,CAAC;MACLC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE;KACf;IAED,YAAO,GAAY;MACjBH,EAAE,EAAE,CAAC;MACLI,OAAO,EAAE,CAAC;MACVC,SAAS,EAAE,CAAC;MACZC,WAAW,EAAE;KACd;IAED,aAAQ,GAAG,IAAId,SAAS,CAAC;MACvBe,IAAI,EAAE,IAAIhB,WAAW,CAAC,EAAE,EAACE,UAAU,CAACe,QAAQ;KAE7C,CAAC;EAE8G;EAEhHC,QAAQ;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACd,eAAe,CAACe,cAAc,EAAE;IACzD,IAAI,CAACC,UAAU,GAAG,IAAI,CAAChB,eAAe,CAACiB,YAAY,EAAE;IACrD,IAAI,CAACC,eAAe,EAAE;EACxB;EAIAA,eAAe;IACb,IAAI,CAAClB,eAAe,CAACiB,YAAY,EAAE,CAACE,SAAS,CAACC,IAAI,IAAG;MACnD,IAAI,CAACC,SAAS,GAAGD,IAAI;MAErB,KAAK,IAAIE,CAAC,IAAIF,IAAI,EAAC;QACjB,IAAI,CAACG,QAAQ,CAACC,GAAG,CAAC,IAAI,CAACH,SAAS,CAACC,CAAC,CAAC,CAAClB,EAAE,EAAE,IAAI,CAACiB,SAAS,CAACC,CAAC,CAAC,CAACG,SAAS,CAAC;;IAExE,CAAC,CAAC;EAEJ;EAEA,IAAId,IAAI;IACN,OAAO,IAAI,CAACe,QAAQ,CAACC,GAAG,CAAC,MAAM,CAAC;EAClC;EAEAC,UAAU;IACZC,OAAO,CAACC,IAAI,CAAC,IAAI,CAACJ,QAAQ,CAACK,KAAK,CAAC;IAG/B;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAGA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAGA;EAIA;;;AA9FWjC,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAkC;EAAAC;EAAAC;EAAAC;EAAAC;AAAA","names":["FormControl","FormGroup","Validators","FormComponent","constructor","requestsServise","router","formBuilder","Map","id","ContactName","ContactEmail","ContactPhone","TopicId","ContactId","MessageText","name","required","ngOnInit","contactList$","getAllContacts","topicList$","getAllTopics","refreshTopicMap","subscribe","data","topicList","i","TopicMap","set","topicName","formProv","get","addRequest","console","warn","value","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["D:\\Мои работы (сайты)\\Feedback_form_ST\\FeedbackFormStUI\\src\\app\\components\\form\\form.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Contact } from 'src/app/models/contact.model';\nimport { Message } from 'src/app/models/message.model';\nimport { RequestsService } from 'src/app/services/requests.service';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class FormComponent implements OnInit {\n\n  contactList$!: Observable<any[]>;\n  topicList$!: Observable<any[]>;\n  contactList: any = [];\n  topicList: any = [];\n  newContact: boolean = true;\n\n  TopicMap:Map<string, string> = new Map();\n\n  contact: Contact = {\n    id: 0,\n    ContactName: '',\n    ContactEmail: '',\n    ContactPhone: '',\n  };\n\n  message: Message = {\n    id: 0,\n    TopicId: 0,\n    ContactId: 0,\n    MessageText: '',\n  };\n\n  formProv = new FormGroup({\n    name: new FormControl('',Validators.required),\n\n  })\n\n  constructor(private requestsServise: RequestsService, private router: Router, private formBuilder: FormBuilder){}\n\n  ngOnInit(): void {\n    this.contactList$ = this.requestsServise.getAllContacts();\n    this.topicList$ = this.requestsServise.getAllTopics();\n    this.refreshTopicMap();\n  }\n\n\n\n  refreshTopicMap(){\n    this.requestsServise.getAllTopics().subscribe(data => {\n      this.topicList = data;\n\n      for( let i of data){\n        this.TopicMap.set(this.topicList[i].id, this.topicList[i].topicName)\n      }\n    })\n    \n  }\n\n  get name(){\n    return this.formProv.get('name');\n  }\n\n  addRequest() {\nconsole.warn(this.formProv.value);\n\n\n  //   this.requestsServise.getAllContacts().subscribe(data => {\n  //     this.contactList = data;\n  //     this.newContact = true;\n  //     for (let i in this.contactList){\n\n  //       if ((this.contactList[i].contactEmail == this.contact.ContactEmail) && (this.contactList[i].contactPhone == this.contact.ContactPhone)){\n  //         this.newContact = false; \n  //         this.message.ContactId = data[+i].id;          \n  //       }\n  //     }\n    \n  //   });\n  //   this.requestsServise.addMessage(this.message).subscribe({\n  //     next: (result) => {\n  //       this.router.navigate(['request/:id']);\n  //     }\n  //   });\n   \n\n  //   if (this.newContact == true){\n  //     this.requestsServise.addContact(this.contact).subscribe({\n  //       next: (result) => {\n  //         this.message.ContactId = Object.values(result)[0];\n  //         this.requestsServise.addMessage(this.message).subscribe({\n  //           next: (result) => {\n  //             this.router.navigate(['request/:id']);\n  //           }\n  //         });\n  //       }\n  //     });\n    \n\n  //   } \n\n\n    \n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}